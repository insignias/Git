<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"  
		 xmlns:beans="http://www.springframework.org/schema/beans" 
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns:context="http://www.springframework.org/schema/context"  
		 xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
		 http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		 http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">  
  
	<beans:import resource="servlet-context.xml"/>  
	<!-- <http pattern="/resources/**" security="none" /> -->
	<http auto-config="true">  
		<intercept-url pattern="/welcome"  access="permitAll()"/>
		<!-- default-target-url="/welcome" -->
		<form-login 
		    login-page="/login" 
		    default-target-url="/welcome"
			authentication-failure-url="/error" 
			username-parameter="email"
			password-parameter="password"/> 
		<logout logout-url="/login?logout" />
		
		<csrf disabled="true"/> 
		
		<remember-me 
        	token-validity-seconds="1209600"
			remember-me-parameter="remember-me" 
			data-source-ref="dataSource" />
	</http>
  
  	<authentication-manager>
	  	<authentication-provider>
	  		<jdbc-user-service 
	  		data-source-ref="dataSource"
		    users-by-username-query="select TU.EMAIL as email,TU.PASSWORD as password,1 as enabled from TABLE_USER TU 
		    						 where lower(TU.EMAIL) = lower(?)"  
		    authorities-by-username-query="select TU.EMAIL, TR.ROLE_TYPE from TABLE_USER TU, TABLE_ROLE TR   
        									where TU.EMAIL = TR.EMAIL and lower(TU.EMAIL) = lower(?)"/>   
	  	</authentication-provider> 
	</authentication-manager>
</beans:beans>
