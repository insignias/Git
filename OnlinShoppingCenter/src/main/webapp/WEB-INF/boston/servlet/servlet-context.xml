<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
		
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	<!-- Free Marker -->
	<beans:bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <beans:property name="templateLoaderPath" value="/WEB-INF/views/error/"/>
    </beans:bean>
    
    <beans:bean id="viewResolver3" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver"
        p:cache="true"
        p:prefix=""
        p:exposeRequestAttributes="true"
        p:exposeSpringMacroHelpers="true"
        p:suffix=".ftl"/>
	
	<!-- Velocity -->
	
	 <beans:bean id="velocityConfig" class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <beans:property name="resourceLoaderPath" value="/WEB-INF/views/confirmorder/" />
    </beans:bean>


    <beans:bean id="viewResolver2" class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver"
          p:cache="true"
          p:exposeSpringMacroHelpers="true"
          p:prefix=""
          p:suffix=".vm" >
    </beans:bean> 
	
	<!-- Tiles -->
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" id="viewResolver">   
			<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView" />
    </beans:bean>
	<beans:bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer" id="tilesConfigurer">  
	    <beans:property name="definitions">  
		    <beans:list>  
		         <beans:value>/WEB-INF/tiles/tiles_def_login.xml</beans:value>  
		    </beans:list>  
	    </beans:property>  
	</beans:bean>
	
	<beans:bean id="viewResolver1" class="org.springframework.web.servlet.view.ResourceBundleViewResolver">
        <beans:property name="order" value="1"/>
        <beans:property name="basename" value="pdfViews"/>
    </beans:bean> 
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/login/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<context:component-scan base-package="com.neu.css" />
	<tx:annotation-driven transaction-manager="hibernateTransactionManager"></tx:annotation-driven>
	<context:property-placeholder location="/resources/database/database.properties" />
	
	<beans:bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource">  
		 <beans:property name="driverClassName" value="${database.driver}"/>  
		 <beans:property name="url" value="${database.url}"/>  
		 <beans:property name="username" value="${database.user}"/>  
		 <beans:property name="password" value="${database.password}"/>  
	</beans:bean>
	
	<beans:bean id="savedRequestAwareAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<beans:property name="targetUrlParameter" value="login" />
	  </beans:bean>
		
	<beans:bean class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" id="sessionFactory">
 		<beans:property name="dataSource" ref="dataSource"/>  
 		<beans:property name="annotatedClasses">
			  <beans:list>  
			   <beans:value>com.neu.css.login.model.ImplLoginUser</beans:value>
			   <beans:value>com.neu.css.login.model.ImplLoginRole</beans:value>
			   <beans:value>com.neu.css.productcatalog.model.ProductCatalogType</beans:value>
			   <beans:value>com.neu.css.productcatalog.model.Product</beans:value>
			   <beans:value>com.neu.css.payment.model.ImplPaymentMode</beans:value>
			   <beans:value>com.neu.css.payment.model.ImplBillingAddress</beans:value>
			   <beans:value>com.neu.css.order.model.Order</beans:value>
			   <beans:value>com.neu.css.order.model.ProductOrder</beans:value>
			  </beans:list>  
 		</beans:property>  
		<beans:property name="hibernateProperties">  
		  <beans:props>  
			  <beans:prop key="hibernate.dialect">${hibernate.dialect}</beans:prop>  
			  <beans:prop key="hibernate.show_sql">${hibernate.show_sql}</beans:prop>  
			  <beans:prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</beans:prop>      
		  </beans:props>  
		 </beans:property>  
	</beans:bean>  
	<beans:bean class="org.springframework.orm.hibernate4.HibernateTransactionManager" id="hibernateTransactionManager">  
		<beans:property name="sessionFactory" ref="sessionFactory"></beans:property>  
	</beans:bean>
	 <!-- Configure to plugin JSON as request and response in method handler -->
    <beans:bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <beans:property name="messageConverters">
            <beans:list>
                <beans:ref bean="jsonMessageConverter"/>
            </beans:list>
        </beans:property>
    </beans:bean>
     
    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <beans:bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </beans:bean> 
	
	
</beans:beans>
